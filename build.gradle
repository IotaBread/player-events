plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'java-library'
    id 'com.modrinth.minotaur' version '2.2.0'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'org.quiltmc.quilt-mappings-on-loom' version '4.2.0'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.2'
}

archivesBaseName = project.archives_base_name
group = project.maven_group

boolean isBuild = System.getenv('GITHUB_WORKFLOW') == 'build'
version = !isBuild ? project.mod_version : "${project.mod_version}+build.${System.getenv('GITHUB_RUN_NUMBER')}"

allprojects {
    apply plugin: 'fabric-loom'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    repositories {
        maven {
            name = 'Quilt'
            url = 'https://maven.quiltmc.org/repository/release'
        }
        maven {
            name = 'Quilt Snapshots'
            url = 'https://maven.quiltmc.org/repository/snapshot'
        }
        maven {
            name 'FabricMC'
            url 'https://maven.fabricmc.net'
        }
    }

    dependencies {
        //to change the versions see the gradle.properties file
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings(loom.layered {
            addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${project.quilt_mappings_build}:v2"))
        })
        modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"

        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    }

    processResources {
        inputs.property 'version', rootProject.version

        filesMatching('fabric.mod.json') {
            expand 'version': rootProject.version
        }
    }

    tasks.withType(JavaCompile).configureEach {
        // ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        // If Javadoc is generated, this must be specified in that task too.
        it.options.encoding = 'UTF-8'

        it.options.release = 17
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()
    }

    jar {
        from('LICENSE') {
            rename { "${it}_${project.archivesBaseName}" }
        }
    }
    
    quiltflower {
        addToRuntimeClasspath.set(true)
    }
}

subprojects {
    apply plugin: 'fabric-loom'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'

    version = rootProject.version
}

repositories {
    maven {
        name 'JitPack'
        url 'https://jitpack.io'
    }
    maven {
        url 'https://maven.nucleoid.xyz/'
    }
}

rootProject.processResources.dependsOn(project(':api').processResources)

dependencies {
    // Add subprojects as dependency of root project
    implementation project(path: ':api', configuration: 'namedElements')
    include project(':api')

    // FabricPlaceholderApi
    modImplementation include('eu.pb4:placeholder-api:1.1.3+1.17.1')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            url 's3://maven.bymartrixx.me'
            credentials(AwsCredentials) {
                accessKey = System.env.AWS_ACCESS_KEY ?: findProperty('mavenAccessKey')
                secretKey = System.env.AWS_SECRET_KEY ?: findProperty('mavenSecretKey')
            }
        }
    }
}

modrinth {
    token = project.hasProperty('modrinth_token') ? project.property('modrinth_token') : System.getenv('MODRINTH_TOKEN')
    projectId = 'NLx6lJPJ'
    versionNumber = project.version
    versionName = "Player Events ${project.version}"
    uploadFile = remapJar
    changelog = "A changelog can be found at https://github.com/ByMartrixx/player-events/releases/tag/${version}"
    gameVersions = ['1.18.2']
    loaders = ['fabric', 'quilt']
    additionalFiles = [project(':api').remapJar]
}

curseforge {
    if (project.hasProperty('curse_api_key') || System.getenv('CURSE_API_KEY') != null) {
        apiKey = project.hasProperty('curse_api_key') ? project.property('curse_api_key') : System.getenv('CURSE_API_KEY')
    }
    project {
        id = '404348'
        changelog = "A changelog can be found at https://github.com/ByMartrixx/player-events/releases/tag/${version}"
        releaseType = 'release'
        addGameVersion '1.18.2'
        addGameVersion 'Fabric'
        addGameVersion 'Quilt'
        mainArtifact(remapJar) {
            displayName = "Player Events ${version}"
        }
        addArtifact(project(':api').remapJar) {
            displayName = "Player Events API ${version}"
        }
        afterEvaluate {
            uploadTask.dependsOn('remapJar')
            uploadTask.dependsOn('api:remapJar')
        }
    }
    options {
        forgeGradleIntegration = false
    }
}

publish.finalizedBy tasks.curseforge, tasks.modrinth, project(':api').tasks.publish
